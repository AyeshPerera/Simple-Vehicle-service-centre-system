
package AlightMotor_System;

import java.io.InputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ayesh Perera
 */
public class Service extends javax.swing.JFrame {

    /**
     * Creates new form Bookings
     */
    
     private InputStream in;
    private Object DbUtils;
    Main mn=new Main();
    private String toDate;
    private String totime;
    private String search;
    private String sbtp;
    private String sjts;
    
    public Service() {
        
        initComponents();        
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        
        toDate=mn.cTime();
        
        
        
        
        
        Show_data_Table();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel2 = new javax.swing.JLabel();
        jsbt = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jsearch = new javax.swing.JTextField();

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Alight Motor Workers (Pvt).Ltd");
        setAlwaysOnTop(true);
        setName("Bookings"); // NOI18N
        setResizable(false);

        jLayeredPane5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jLayeredPane5Layout = new javax.swing.GroupLayout(jLayeredPane5);
        jLayeredPane5.setLayout(jLayeredPane5Layout);
        jLayeredPane5Layout.setHorizontalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 797, Short.MAX_VALUE)
        );
        jLayeredPane5Layout.setVerticalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel1.setBackground(new java.awt.Color(153, 153, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Service");

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Close Window");
        jButton1.setActionCommand("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Edit Job Status");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.setText("Edit V-HndOvr Status");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setText("Confirmed for today");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Vehicle Handed Status");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Job Done");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jLayeredPane1.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jButton6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jButton8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jButton9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jButton10, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jDesktopPane1.setName(""); // NOI18N

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Search by Vehicle");

        jsbt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Booking Number", "Vehicle Number", "job status", "vehicle handed status" }));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Select Searching Type");

        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Refresh");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Booking Number", "Vehicle Number", "Booking Date", "Booking Type", "Approval", "Cl_Info_Status", "Confirmed Date", "Job Status", "Vehicle Handed"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jsbt, 0, 151, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(199, 199, 199)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jsbt)
                    .addComponent(jsearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jsbt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jsearch, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDesktopPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLayeredPane5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(jLayeredPane5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane1)
                    .addComponent(jDesktopPane1))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1098, 767));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    public ArrayList<BookingT> getbookingList(){
        
        ArrayList bklist=new ArrayList();
        
        Connection con=mn.getcon();
        
        String qyr="SELECT * FROM `bookings` WHERE `Booking_Type` LIKE 'service' ORDER BY `Booking_Nmbr` ASC";
        Statement st;
        ResultSet rs;
        
        try{
            st=con.createStatement();
            rs=st.executeQuery(qyr);
            
            BookingT bkt;
            
            while(rs.next()){
                
                bkt=new BookingT(rs.getInt("Booking_Nmbr"),rs.getString("Client_Nmbr"),rs.getDate("Booking_Date"),rs.getString("Booking_Type"),rs.getString("Approval"),rs.getString("Cl_Info_Stat"),rs.getString("Client_Id"),rs.getString("Job_Status"),rs.getString("Vehicle_Released"));
                bklist.add(bkt);
            }
                    
        }catch(Exception e){
            
            e.printStackTrace();
            
        }
        return bklist;
        
    }
    
    public ArrayList<BookingT> getcondate(){
        
        ArrayList bklist=new ArrayList();
        
        Connection con=mn.getcon();
        
        String qyr="SELECT * FROM `bookings` WHERE `Booking_Type` LIKE 'service' AND `Booking_Date` = '"+toDate+"'";
        Statement st;
        ResultSet rs;
        
        try{
            st=con.createStatement();
            rs=st.executeQuery(qyr);
            
            BookingT bkt;
            
            while(rs.next()){
                
                bkt=new BookingT(rs.getInt("Booking_Nmbr"),rs.getString("Client_Nmbr"),rs.getDate("Booking_Date"),rs.getString("Booking_Type"),rs.getString("Approval"),rs.getString("Cl_Info_Stat"),rs.getString("Client_Id"),rs.getString("Job_Status"),rs.getString("Vehicle_Released"));
                bklist.add(bkt);
            }
                    
        }catch(Exception e){
            
            e.printStackTrace();
            
        }
        return bklist;
        
    }
    
    public ArrayList<BookingT> getClientinfo(){
        
        ArrayList bklist=new ArrayList();
        
        Connection con=mn.getcon();
        
        String qyr="SELECT * FROM `bookings` WHERE `Booking_Type` LIKE 'service' AND `Vehicle_Released` = 'yes' ORDER BY `Booking_Nmbr` ASC";
        Statement st;
        ResultSet rs;
        
        try{
            st=con.createStatement();
            rs=st.executeQuery(qyr);
            
            BookingT bkt;
            
            while(rs.next()){
                
                bkt=new BookingT(rs.getInt("Booking_Nmbr"),rs.getString("Client_Nmbr"),rs.getDate("Booking_Date"),rs.getString("Booking_Type"),rs.getString("Approval"),rs.getString("Cl_Info_Stat"),rs.getString("Client_Id"),rs.getString("Job_Status"),rs.getString("Vehicle_Released"));
                bklist.add(bkt);
            }
                    
        }catch(Exception e){
            
            e.printStackTrace();
            
        }
        return bklist;
        
    }
    
    public ArrayList<BookingT> getClientaprd(){
        
        ArrayList bklist=new ArrayList();
        
        Connection con=mn.getcon();
        
        String qyr="SELECT * FROM `bookings` WHERE `Approval` = 'yes' AND `Booking_Type` LIKE 'service' ORDER BY `Booking_Nmbr` ASC";
        Statement st;
        ResultSet rs;
        
        try{
            st=con.createStatement();
            rs=st.executeQuery(qyr);
            
            BookingT bkt;
            
            while(rs.next()){
                
                bkt=new BookingT(rs.getInt("Booking_Nmbr"),rs.getString("Client_Nmbr"),rs.getDate("Booking_Date"),rs.getString("Booking_Type"),rs.getString("Approval"),rs.getString("Cl_Info_Stat"),rs.getString("Client_Id"),rs.getString("Job_Status"),rs.getString("Vehicle_Released"));
                bklist.add(bkt);
            }
                    
        }catch(Exception e){
            
            e.printStackTrace();
            
        }
        return bklist;
        
    }
    
    public ArrayList<BookingT> getJobDone(){
        
        ArrayList bklist=new ArrayList();
        
        Connection con=mn.getcon();
        
        String qyr="SELECT * FROM `bookings` WHERE `Booking_Type` LIKE 'service' AND `Cl_Info_Stat` LIKE 'yes' ORDER BY `Booking_Nmbr` ASC ";
        Statement st;
        ResultSet rs;
        
        try{
            st=con.createStatement();
            rs=st.executeQuery(qyr);
            
            BookingT bkt;
            
            while(rs.next()){
                
                bkt=new BookingT(rs.getInt("Booking_Nmbr"),rs.getString("Client_Nmbr"),rs.getDate("Booking_Date"),rs.getString("Booking_Type"),rs.getString("Approval"),rs.getString("Cl_Info_Stat"),rs.getString("Client_Id"),rs.getString("Job_Status"),rs.getString("Vehicle_Released"));
                bklist.add(bkt);
            }
                    
        }catch(Exception e){
            
            e.printStackTrace();
            
        }
        return bklist;
        
    }
    
    public ArrayList<BookingT> getClientnotaprd(){
        
        ArrayList bklist=new ArrayList();
        
        Connection con=mn.getcon();
        
        String qyr="SELECT * FROM `bookings` WHERE `Approval` = '' AND `Booking_Type` LIKE 'service' ORDER BY `Booking_Nmbr` ASC";
        Statement st;
        ResultSet rs;
        
        try{
            st=con.createStatement();
            rs=st.executeQuery(qyr);
            
            BookingT bkt;
            
            while(rs.next()){
                
                bkt=new BookingT(rs.getInt("Booking_Nmbr"),rs.getString("Client_Nmbr"),rs.getDate("Booking_Date"),rs.getString("Booking_Type"),rs.getString("Approval"),rs.getString("Cl_Info_Stat"),rs.getString("Client_Id"),rs.getString("Job_Status"),rs.getString("Vehicle_Released"));
                bklist.add(bkt);
            }
                    
        }catch(Exception e){
            
            e.printStackTrace();
            
        }
        return bklist;
        
    }
    
    public ArrayList<BookingT> getsearchres(){
        
        ArrayList bklist=new ArrayList();
        
        Connection con=mn.getcon();
        String qyr="SELECT * FROM `bookings` WHERE `Booking_Type` LIKE 'service' AND `Approval` LIKE 'yes' AND `Cl_Info_Stat` LIKE 'yes' AND `Booking_Nmbr` LIKE '%"+search+"%' or `Vehicle_Released` LIKE '%"+search+"%' or `Client_Nmbr` LIKE '%" +search+ "%' or `Booking_Type` = '" +sbtp+ "' or `Job_Status` = '" +sjts+ "'";
        
        
        Statement st;
        ResultSet rs;
        
        try{
            st=con.createStatement();
            rs=st.executeQuery(qyr);
            
            BookingT bkt;
            
            while(rs.next()){
                
                bkt=new BookingT(rs.getInt("Booking_Nmbr"),rs.getString("Client_Nmbr"),rs.getDate("Booking_Date"),rs.getString("Booking_Type"),rs.getString("Approval"),rs.getString("Cl_Info_Stat"),rs.getString("Client_Id"),rs.getString("Job_Status"),rs.getString("Vehicle_Released"));
                bklist.add(bkt);
            }
                    
        }catch(Exception e){
            
            e.printStackTrace();
            
        }
        return bklist;
        
    }
    
     public ArrayList<BookingT> getsearchresr1(){
        
        ArrayList bklist=new ArrayList();
        
        Connection con=mn.getcon();
        String qyr="SELECT * FROM `bookings` WHERE `Booking_Type` LIKE 'service' AND `Booking_Nmbr` LIKE '"+search+"'";
        
        
        Statement st;
        ResultSet rs;
        
        try{
            st=con.createStatement();
            rs=st.executeQuery(qyr);
            
            BookingT bkt;
            
            while(rs.next()){
                
                bkt=new BookingT(rs.getInt("Booking_Nmbr"),rs.getString("Client_Nmbr"),rs.getDate("Booking_Date"),rs.getString("Booking_Type"),rs.getString("Approval"),rs.getString("Cl_Info_Stat"),rs.getString("Client_Id"),rs.getString("Job_Status"),rs.getString("Vehicle_Released"));
                bklist.add(bkt);
            }
                    
        }catch(Exception e){
            
            e.printStackTrace();
            
        }
        return bklist;
        
    }
     
     public ArrayList<BookingT> getsearchresr2(){
        
        ArrayList bklist=new ArrayList();
        
        Connection con=mn.getcon();
        String qyr="SELECT * FROM `bookings` WHERE `Booking_Type` LIKE 'service' AND `Client_Nmbr` LIKE '"+search+"'";
        
        
        Statement st;
        ResultSet rs;
        
        try{
            st=con.createStatement();
            rs=st.executeQuery(qyr);
            
            BookingT bkt;
            
            while(rs.next()){
                
                bkt=new BookingT(rs.getInt("Booking_Nmbr"),rs.getString("Client_Nmbr"),rs.getDate("Booking_Date"),rs.getString("Booking_Type"),rs.getString("Approval"),rs.getString("Cl_Info_Stat"),rs.getString("Client_Id"),rs.getString("Job_Status"),rs.getString("Vehicle_Released"));
                bklist.add(bkt);
            }
                    
        }catch(Exception e){
            
            e.printStackTrace();
            
        }
        return bklist;
        
    }
     
     public ArrayList<BookingT> getsearchresr3(){
        
        ArrayList bklist=new ArrayList();
        
        Connection con=mn.getcon();
        String qyr="SELECT * FROM  `bookings` WHERE `Booking_Type` LIKE 'service' AND `Booking_Type` = '" +search+ "' ";
        
        
        Statement st;
        ResultSet rs;
        
        try{
            st=con.createStatement();
            rs=st.executeQuery(qyr);
            
            BookingT bkt;
            
            while(rs.next()){
                
                bkt=new BookingT(rs.getInt("Booking_Nmbr"),rs.getString("Client_Nmbr"),rs.getDate("Booking_Date"),rs.getString("Booking_Type"),rs.getString("Approval"),rs.getString("Cl_Info_Stat"),rs.getString("Client_Id"),rs.getString("Job_Status"),rs.getString("Vehicle_Released"));
                bklist.add(bkt);
            }
                    
        }catch(Exception e){
            
            e.printStackTrace();
            
        }
        return bklist;
        
    }
     
     public ArrayList<BookingT> getsearchresr4(){
        
        ArrayList bklist=new ArrayList();
        
        Connection con=mn.getcon();
        String qyr="SELECT * FROM `bookings` WHERE `Booking_Type` LIKE 'service' AND `Job_Status` = '" +search+ "'";
        
        
        Statement st;
        ResultSet rs;
        
        try{
            st=con.createStatement();
            rs=st.executeQuery(qyr);
            
            BookingT bkt;
            
            while(rs.next()){
                
                bkt=new BookingT(rs.getInt("Booking_Nmbr"),rs.getString("Client_Nmbr"),rs.getDate("Booking_Date"),rs.getString("Booking_Type"),rs.getString("Approval"),rs.getString("Cl_Info_Stat"),rs.getString("Client_Id"),rs.getString("Job_Status"),rs.getString("Vehicle_Released"));
                bklist.add(bkt);
            }
                    
        }catch(Exception e){
            
            e.printStackTrace();
            
        }
        return bklist;
        
    }
    
    public ArrayList<BookingT> getsearchresr5(){
        
        ArrayList bklist=new ArrayList();
        
        Connection con=mn.getcon();
        String qyr="SELECT * FROM `bookings` WHERE `Booking_Type` LIKE 'service' AND `Vehicle_Released` = '" +search+ "'";
        
        
        Statement st;
        ResultSet rs;
        
        try{
            st=con.createStatement();
            rs=st.executeQuery(qyr);
            
            BookingT bkt;
            
            while(rs.next()){
                
                bkt=new BookingT(rs.getInt("Booking_Nmbr"),rs.getString("Client_Nmbr"),rs.getDate("Booking_Date"),rs.getString("Booking_Type"),rs.getString("Approval"),rs.getString("Cl_Info_Stat"),rs.getString("Client_Id"),rs.getString("Job_Status"),rs.getString("Vehicle_Released"));
                bklist.add(bkt);
            }
                    
        }catch(Exception e){
            
            e.printStackTrace();
            
        }
        
        return bklist;
                
    } 
     
   
    
    public void Show_data_Table()
    {
        ArrayList<BookingT> bklist=getbookingList();
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        model.setRowCount(0);
        Object[] row = new Object[10];
        for(int i=0;i<bklist.size();i++)
        {
            row[0]=bklist.get(i).bnmbr;
            row[1]=bklist.get(i).clntnmbr;
            row[2]=bklist.get(i).bdate;
            row[3]=bklist.get(i).btype;
            row[4]=bklist.get(i).aprl;
            row[5]=bklist.get(i).clinfo;
            row[6]=bklist.get(i).cnfrmdate;
            row[7]=bklist.get(i).job_stat;
            row[8]=bklist.get(i).vehi_rel;
            
            model.addRow(row);
        }
    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
       this.dispose();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        search=jsearch.getText();
        int index=jsbt.getSelectedIndex();
        
        if(index==0)
        {
            ArrayList<BookingT> bklist=getsearchresr1();
            DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
            Object[] row = new Object[10];
            for(int i=0;i<bklist.size();i++)
            {
                row[0]=bklist.get(i).bnmbr;
                row[1]=bklist.get(i).clntnmbr;
                row[2]=bklist.get(i).bdate;
                row[3]=bklist.get(i).btype;
                row[4]=bklist.get(i).aprl;
                row[5]=bklist.get(i).clinfo;
                row[6]=bklist.get(i).cnfrmdate;
                row[7]=bklist.get(i).job_stat;
                row[8]=bklist.get(i).vehi_rel;

                model.addRow(row);
            }
        }
        else if(index==1){
            
            ArrayList<BookingT> bklist=getsearchresr2();
            DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
            Object[] row = new Object[10];
            for(int i=0;i<bklist.size();i++)
            {
                row[0]=bklist.get(i).bnmbr;
                row[1]=bklist.get(i).clntnmbr;
                row[2]=bklist.get(i).bdate;
                row[3]=bklist.get(i).btype;
                row[4]=bklist.get(i).aprl;
                row[5]=bklist.get(i).clinfo;
                row[6]=bklist.get(i).cnfrmdate;
                row[7]=bklist.get(i).job_stat;
                row[8]=bklist.get(i).vehi_rel;

                model.addRow(row);
            }
            
        }
        else if(index==2){
            
            ArrayList<BookingT> bklist=getsearchresr4();
            DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
            Object[] row = new Object[10];
            for(int i=0;i<bklist.size();i++)
            {
                row[0]=bklist.get(i).bnmbr;
                row[1]=bklist.get(i).clntnmbr;
                row[2]=bklist.get(i).bdate;
                row[3]=bklist.get(i).btype;
                row[4]=bklist.get(i).aprl;
                row[5]=bklist.get(i).clinfo;
                row[6]=bklist.get(i).cnfrmdate;
                row[7]=bklist.get(i).job_stat;
                row[8]=bklist.get(i).vehi_rel;

                model.addRow(row);
            }
            
        }
        
        else if(index==3){
            
            ArrayList<BookingT> bklist=getsearchresr5();
            DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
            Object[] row = new Object[10];
            for(int i=0;i<bklist.size();i++)
            {
                row[0]=bklist.get(i).bnmbr;
                row[1]=bklist.get(i).clntnmbr;
                row[2]=bklist.get(i).bdate;
                row[3]=bklist.get(i).btype;
                row[4]=bklist.get(i).aprl;
                row[5]=bklist.get(i).clinfo;
                row[6]=bklist.get(i).cnfrmdate;
                row[7]=bklist.get(i).job_stat;
                row[8]=bklist.get(i).vehi_rel;

                model.addRow(row);
            }
            
        }
        
        
         
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        
        ArrayList<BookingT> bklist=getClientinfo();
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        model.setRowCount(0);
        Object[] row = new Object[10];
        for(int i=0;i<bklist.size();i++)
        {
            row[0]=bklist.get(i).bnmbr;
            row[1]=bklist.get(i).clntnmbr;
            row[2]=bklist.get(i).bdate;
            row[3]=bklist.get(i).btype;
            row[4]=bklist.get(i).aprl;
            row[5]=bklist.get(i).clinfo;
            row[6]=bklist.get(i).cnfrmdate;
            row[7]=bklist.get(i).job_stat;
            row[8]=bklist.get(i).vehi_rel;
            
            model.addRow(row);
        }
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        
         ArrayList<BookingT> bklist=getJobDone();
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        model.setRowCount(0);
        Object[] row = new Object[10];
        for(int i=0;i<bklist.size();i++)
        {
            row[0]=bklist.get(i).bnmbr;
            row[1]=bklist.get(i).clntnmbr;
            row[2]=bklist.get(i).bdate;
            row[3]=bklist.get(i).btype;
            row[4]=bklist.get(i).aprl;
            row[5]=bklist.get(i).clinfo;
            row[6]=bklist.get(i).cnfrmdate;
            row[7]=bklist.get(i).job_stat;
            row[8]=bklist.get(i).vehi_rel;
            
            model.addRow(row);
        }
        
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        ArrayList<BookingT> bklist=getbookingList();
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        model.setRowCount(0);
        Object[] row = new Object[10];
        for(int i=0;i<bklist.size();i++)
        {
            row[0]=bklist.get(i).bnmbr;
            row[1]=bklist.get(i).clntnmbr;
            row[2]=bklist.get(i).bdate;
            row[3]=bklist.get(i).btype;
            row[4]=bklist.get(i).aprl;
            row[5]=bklist.get(i).clinfo;
            row[6]=bklist.get(i).cnfrmdate;
            row[7]=bklist.get(i).job_stat;
            row[8]=bklist.get(i).vehi_rel;
            
            model.addRow(row);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        
        //JOptionPane.showMessageDialog(rootPane,toDate);
        
        ArrayList<BookingT> bklist=getcondate();
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        model.setRowCount(0);
        Object[] row = new Object[10];
        for(int i=0;i<bklist.size();i++)
        {
            row[0]=bklist.get(i).bnmbr;
            row[1]=bklist.get(i).clntnmbr;
            row[2]=bklist.get(i).bdate;
            row[3]=bklist.get(i).btype;
            row[4]=bklist.get(i).aprl;
            row[5]=bklist.get(i).clinfo;
            row[6]=bklist.get(i).cnfrmdate;
            row[7]=bklist.get(i).job_stat;
            row[8]=bklist.get(i).vehi_rel;
            
            model.addRow(row);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new Servicejdsts().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        new Servicevhsts().setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Service().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox jsbt;
    private javax.swing.JTextField jsearch;
    // End of variables declaration//GEN-END:variables
}
